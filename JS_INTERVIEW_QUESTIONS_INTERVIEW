Q.1 Give an example where call apply bind is. required?
Ans Traditionally in JavaScript, you can have objects that have their own properties and methods. For example, object1 cannot use the methods of object2 and vice versa.

    But there’s a way to overcome this restriction.
    You can use call(), apply(), and bind() methods to tie a function into an object and call the function as if it belonged to that object.

    Eg: Let’s go through these three methods one by one and see some use-cases as well.

        Call() Method in JavaScript
        The call() method invokes a function with a specified context. In other words, you can tie a function into an object as if it belonged to the object.

        Example
        Let’s create an object obj and a function add() for adding up a number with another:

        var obj = { num: 2 };
        function add(a){
        return this.num + a;
        }
        Now, there’s a problem with add(). It’s trying to return this.num + some value. But there is no property num inside the function. Thus calling this.num fails.

        But as you can see, the object obj has a property num. What if you could call the function add() on that object as if it belonged to the object?

        This is indeed possible. To do this, use the call() method to tie the function add() momentarily to the object obj:

        add.call(obj, 3);

    Apply() Method in JavaScript
    The apply() method does the exact same as call(). The difference is that call() accepts an argument list, but apply() accepts an array of arguments.

    For example:


    Output:

    10
    

    Bind() Method in JavaScript
    You previously learned what call() and apply() methods do. As you saw, they executed the function immediately when called (and returned a value).

    The bind() method is reminiscent of call() and apply(). But instead of executing a function immediately, bind() returns a function that can be executed later on.

    Let’s modify the previous example to use bind():


    So calling add.bind(obj, 3, 5) returns a function. In this case, you assign it to a constant called func and then run it.

    Calling func() here means calling add() function on the object obj with the arguments of 3, 5.

    Now you understand what call(), apply(), and bind() are and how they work. Here’s a summary of how you can use each with the same object-function setup you saw earlier.

    Output:

    10 10 10

Q.2 What is the difference between readFile and readFileSync?
Ans readFileSync() method is an inbuilt application programming interface of fs module which is used to read the file and return its content. In fs. readFile() method, we can read a file in a non-blocking asynchronous way, but in fs. readFileSync() method, we can read files in a synchronous way, i.e. we are telling node.    

Q.3 What does process in node.js mean?
Ans The process object in Node. js is a global object that can be accessed inside any module without requiring it. There are very few global objects or properties provided in Node. js and process is one of them. It is an essential component in the Node.

Q.4 Explain what node.js is?
Ans Node. js (Node) is an open source, cross-platform runtime environment for executing JavaScript code. Node is used extensively for server-side programming.

Q.5 What is the difference of JS from browser to JS on node.js
Ans 
S.No	Javascript	NodeJS
1.	Javascript is a programming language that is used for writing scripts on the website. NodeJS is a Javascript runtime environment.
2.	Javascript can only be run in the browsers.	We can run Javascript outside the browser with the help of NodeJS.
3.	It is basically used on the client-side.	It is mostly used on the server-side.
4.	Javascript is capable enough to add HTML and play with the DOM. 
 	Nodejs does not have capability to add HTML tags.
5.	Javascript can run in any browser engine as like JS core in safari and Spidermonkey in Firefox. 
 	V8 is the Javascript engine inside of node.js that parses and runs Javascript. 
6.	Javascript is used in frontend development.	Nodejs is used in server-side development.
7.	Some of the javascript frameworks are RamdaJS, TypedJS, etc. 
 	Some of the Nodejs modules are Lodash, express etc. These modules are to be imported from npm. 
 
8.	It is the upgraded version of ECMA script that uses Chrome’s V8 engine written in C++. 
 	Nodejs is written in C, C++ and Javascript.


Q.6 Write three different ways to reverse a string in Javascript? a. using inbuilt method, b. iteratively, c. recursively
Ans a. Inbuit is reamaning???
    b.  let str = "Tarun"
        let reverseStr = "";
        for(let i=str.length-1;i>=0;i--){
            reverseStr+=str[i];
        }
        console.log(reverseStr);

    c. function reverseString(str) {
        if (str === "")
            return "";
        else
            return reverseString(str.substr(1)) + str.charAt(0);
        }
        console.log(reverseString("hello"));


Q.7 Write a program to check two objects are equal ( deep equal )
Ans deep equal = deepEqual() method tests if two objects, and their child objects, are equal, using the == operator.
Program : 

Q.8 What is shallow equal?
Ans A function for performing a shallow comparison between two objects or arrays. Two values have shallow equality when all of their members are strictly equal to the corresponding member of the other.


